#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
Unit 2.
 Task 0: Apache modules
\end_layout

\begin_layout Author
Javier Aguilera Aguilera 2º CFGS DAW
\end_layout

\begin_layout Section
mod_actions
\end_layout

\begin_layout Standard
Ejecuta scripts CGI según el tipo de medio o el método de solicitud.
 Este módulo tiene dos directivas: Action y Script:
\end_layout

\begin_layout Itemize
La directiva Action permite ejecutar scripts CGI cuando un fichero de un
 determinado contenido Mime es requerido.
\end_layout

\begin_layout Itemize
La directiva Script permite ejecutar scripts CGI cuando un método en particular
 es usado en una solicitud.
 Esto hace mucho más fácil ejecutar scripts que el procesamiento de ficheros.
\end_layout

\begin_layout Section
mod_cgi
\end_layout

\begin_layout Standard
Ejecución de scripts CGI.
 Cualquier fichero que tenga el manejador cgi-script será tratado como un
 script CGI, y corriendo bajo el servidor, su salida será devuelta al cliente.
 Los ficheros adquieren este manejador bien sea por tener un nombre que
 contenga una extensión definida por la directiva AddHandler o bien sea
 por estar en un directorio Scriptalias.
\end_layout

\begin_layout Section
mod_cgid
\end_layout

\begin_layout Standard
Este módulo se usa en el lugar de mod_cgi en el caso de que durante el proceso
 de compilacion se seleccione multiproceso MPM.
 Desde el punto de vista del usuario, este módulo se configura y maneja
 de igual manera que mod_cgi.
\end_layout

\begin_layout Section
mod_ext_filter
\end_layout

\begin_layout Standard
El módulo md_ext_filter un modelo de programación simple y familiar para
 filtros.
 Usando este módulo, un programa que lee desde stdin y escribe en stdout
 (por ejemplo, un comando de filtrado de tipo Unix) puede ser un filtro
 de Apache.
 Este mecanismo de filtrado es mucho más lento que uno que esté escrito
 específicamente para la API de Apache y que se ejecute dentro del proceso
 del servidor Apache, pero presenta las siguientes ventajas:
\end_layout

\begin_layout Itemize
El modelo de programación es mucho más simple.
\end_layout

\begin_layout Itemize
Cualquier lenguaje de programación o scripting puede ser usado.
\end_layout

\begin_layout Itemize
Programas que ya existentes se puede utilizar sin modificar como filtros
 de Apache.
\end_layout

\begin_layout Standard
Incluso cuando las características de rendimiento no son adecuadas para
 su uso en producción, mod_ext_filter puede ser usado como un entorno prototipo
 para filtros.
\end_layout

\begin_layout Section
mod_include
\end_layout

\begin_layout Standard
Este módulo proporciona un filtro que procesará los archivos antes de que
 se envíen al cliente.
 El procesamiento se controla mediante comentarios SGML con formato especial
 (elementos).
 Estos elementos permiten el texto condicional, la inclusión de otros ficheros
 o programas, asíc como la configuración e impresioón de variables de entorno.
\end_layout

\begin_layout Section
mod_Idap
\end_layout

\begin_layout Standard
Este módulo se creó para mejorar el rendimiento the los sitios web que dependen
 de conexiones con servidores LDAP.
\end_layout

\begin_layout Section
mod_perl
\end_layout

\begin_layout Standard
Este módulo incrusta un intérprete de Perl en el servidor Apache.
 Además de permitir que los módulos de Apache estén escritos en Perl, permite
 que Apache se configure de forma dinámica usando programas en Perl.
 Sin embargo, su uso más común es para la creación de contenido dinámico
 producido por scripts en Perl que el servidor devuelve como respuesta a
 peticiones.
\end_layout

\begin_layout Section
mod_php5
\end_layout

\begin_layout Standard
Es el caso análogo al mod_perl.
 En lugar de usar Perl, se usa PHP.
\end_layout

\begin_layout Section
mod_python
\end_layout

\begin_layout Standard
Caso análogo a los dos anteriores.
 La diferencia radica en que mientras que los dos anteriores son módulos
 con soporte activo y en desarrollo, mod_python fue abandonado en 2013.
 Python, Perl y PHP hasta ese año, los tres, 
\end_layout

\end_body
\end_document
